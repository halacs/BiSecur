name: docker

on:
  push:
    branches:
      - "**"
    tags:
      - "v*.*.*"

jobs:
  releases-matrix:
    name: Release Go Binary
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # build and publish in parallel: linux/386, linux/amd64, linux/arm64, windows/386, windows/amd64
        goos: [ linux, windows ]
        goarch: [ "386", amd64 ]
    steps:
      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date --rfc-email)"
      - uses: actions/checkout@v3
      - uses: wangyoucao577/go-release-action@v1
        with:
          binary_name: "halsecur"
          github_token: ${{ secrets.GITHUB_TOKEN }}
          goos: ${{ matrix.goos }}
          goarch: ${{ matrix.goarch }}
          ldflags: "-X 'bisecur/version.Version=${{  github.ref_name }}' -X 'bisecur/version.BuildDate=${{ steps.date.outputs.date }}'"
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/halacs/halsecur
          tags: |
            type=ref,event=branch

      - name: Login to GHCR
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}